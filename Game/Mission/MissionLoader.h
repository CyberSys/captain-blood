//===========================================================================================================================
// Spirenkov Maxim, 2003
//===========================================================================================================================//	
// 
//===========================================================================================================================
// MissionLoader	
//============================================================================================

#ifndef _MissionLoader_h_
#define _MissionLoader_h_

#include "..\..\Common_h\core.h"

class Mission;

class MissionLoader  
{
//--------------------------------------------------------------------------------------------
public:
	MissionLoader(Mission & mis, const byte * _data, dword _size);
	virtual ~MissionLoader();

//--------------------------------------------------------------------------------------------
public:
	//Начать процесс загрузки
	bool StartProcess(float loadProgressRange);
	//Залочить список объектов
	void LockObjects();
	//Освободить список объектов
	void UnLockObjects();
	//Процесс загрузки окончен
	bool IsDone();

//--------------------------------------------------------------------------------------------
//Этапы загрузки
//--------------------------------------------------------------------------------------------
private:
	//Проверить версию
	bool CheckId();
	//Загрузить объекты
	void LoadObjects();
	//Загрузить объект
	void LoadObject();
	//Получить данные объекта
	const char * GetObjectData(dword & datasize);

//--------------------------------------------------------------------------------------------
//Доступ к данным
//--------------------------------------------------------------------------------------------
private:
	//Получить данные
	const void * Get(dword s);
	//Есть данные
	bool IsCan();

//--------------------------------------------------------------------------------------------
//Входные данные
//--------------------------------------------------------------------------------------------
private:
	Mission & mission;	//Объект миссии
	const byte * data;	//Данные, описывающие данную миссию
	dword pnt;			//Текущая позиция разбора
	dword size;			//Размер данных
	dword objectsCount;	//Количество объектов в миссии
	float loadStep;		//Шаг для изменения 

//--------------------------------------------------------------------------------------------
private:
	DWORD threadID;
	HANDLE threadHandle;
	bool stopLoading;
	CritSection critSection;
	static DWORD WINAPI MissionLoaderThreadProc(LPVOID lpParameter);
};

#endif

